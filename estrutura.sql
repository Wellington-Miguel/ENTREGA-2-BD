
-- Tabela para armazenar informações sobre os financiadores de projetos e bolsas.
CREATE TABLE TB_FINANCIADOR (
    ID_FINANCIADOR INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    NM_FINANCIADOR VARCHAR(255) NOT NULL,
    VL_INVESTIMENTO NUMERIC(15, 2) NOT NULL,
    TP_FINANCIADOR VARCHAR(100) NOT NULL, 
    ST_REGISTRO_ATIVO CHAR(1) NOT NULL DEFAULT 'S' 
);

-- Tabela para os laboratórios de pesquisa.
CREATE TABLE TB_LABORATORIO (
    ID_LABORATORIO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    NM_LABORATORIO VARCHAR(255) NOT NULL,
    NM_UNIVERSIDADE VARCHAR(255) NOT NULL,
    DS_AREA VARCHAR(255) NOT NULL, 
    ST_REGISTRO_ATIVO CHAR(1) NOT NULL DEFAULT 'S'
);

-- Tabela para os equipamentos alocados nos laboratórios.
CREATE TABLE TB_EQUIPAMENTO (
    ID_EQUIPAMENTO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    NM_EQUIPAMENTO VARCHAR(255) NOT NULL,
    ST_DISPONIBILIDADE VARCHAR(50) NOT NULL, 
    ST_REGISTRO_ATIVO CHAR(1) NOT NULL DEFAULT 'S',
    CO_LABORATORIO INT NOT NULL,
    CONSTRAINT FK_EQUIPAMENTO_LABORATORIO FOREIGN KEY(CO_LABORATORIO) REFERENCES TB_LABORATORIO(ID_LABORATORIO)
);

-- Tabela para os projetos de pesquisa.
CREATE TABLE TB_PROJETO (
    ID_PROJETO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    NM_PROJETO VARCHAR(255) NOT NULL,
    VL_ORCAMENTO NUMERIC(15, 2) NOT NULL,
    DT_INICIO DATE NOT NULL,
    DT_FINAL DATE,
    ST_PROJETO CHAR(1) NOT NULL DEFAULT 'A', 
    ST_REGISTRO_ATIVO CHAR(1) NOT NULL DEFAULT 'S'
);

-- Tabela para os pesquisadores.
CREATE TABLE TB_PESQUISADOR (
    ID_PESQUISADOR INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    NM_PESQUISADOR VARCHAR(255) NOT NULL,
    DS_EMAIL VARCHAR(255) NOT NULL UNIQUE,
    DS_TITULACAO VARCHAR(100) NOT NULL, 
    QT_CARGA_HORARIA INT NOT NULL,
    TP_BOLSA VARCHAR(100), 
    VL_BOLSA NUMERIC(10, 2),
    ST_REGISTRO_ATIVO CHAR(1) NOT NULL DEFAULT 'S'
);

-- Tabela para avaliações de desempenho dos pesquisadores.
CREATE TABLE TB_AVALIACAO (
    ID_AVALIACAO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    QT_NOTA INT NOT NULL CHECK (QT_NOTA >= 1 AND QT_NOTA <= 5),
    DS_FEEDBACK TEXT,
    DT_AVALIACAO DATE NOT NULL,
    CO_PESQUISADOR INT NOT NULL,
    CO_PROJETO INT NOT NULL,
    CONSTRAINT FK_AVALIACAO_PESQUISADOR FOREIGN KEY(CO_PESQUISADOR) REFERENCES TB_PESQUISADOR(ID_PESQUISADOR),
    CONSTRAINT FK_AVALIACAO_PROJETO FOREIGN KEY(CO_PROJETO) REFERENCES TB_PROJETO(ID_PROJETO)
);

-- Tabela para relatórios submetidos pelos pesquisadores.
CREATE TABLE TB_RELATORIO (
    ID_RELATORIO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    DS_RELATORIO TEXT NOT NULL,
    ST_ANDAMENTO VARCHAR(100) NOT NULL, 
    DT_SUBMISSAO DATE NOT NULL,
    CO_PESQUISADOR INT NOT NULL,
    CO_PROJETO INT NOT NULL,
    CONSTRAINT FK_RELATORIO_PESQUISADOR FOREIGN KEY(CO_PESQUISADOR) REFERENCES TB_PESQUISADOR(ID_PESQUISADOR),
    CONSTRAINT FK_RELATORIO_PROJETO FOREIGN KEY(CO_PROJETO) REFERENCES TB_PROJETO(ID_PROJETO)
);

-- Tabela para eventos científicos.
CREATE TABLE TB_EVENTO (
    ID_EVENTO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    NM_EVENTO VARCHAR(255) NOT NULL,
    DS_LOCAL VARCHAR(255) NOT NULL,
    DT_EVENTO DATE NOT NULL,
    TP_EVENTO VARCHAR(100) NOT NULL, 
    QT_CARGA_HORARIA INT NOT NULL
);

-- Tabela para publicações científicas.
CREATE TABLE TB_PUBLICACAO (
    ID_PUBLICACAO INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    DS_TITULO VARCHAR(500) NOT NULL,
    NM_EDITORA VARCHAR(255),
    TP_CATEGORIA VARCHAR(100) NOT NULL, 
    DT_PUBLICACAO DATE NOT NULL
);

-- Tabela associativa N:M para vincular pesquisadores a projetos.
CREATE TABLE TB_PESQUISADOR_PROJETO (
    CO_PESQUISADOR INT NOT NULL,
    CO_PROJETO INT NOT NULL,
    CONSTRAINT FK_PP_PESQUISADOR FOREIGN KEY(CO_PESQUISADOR) REFERENCES TB_PESQUISADOR(ID_PESQUISADOR),
    CONSTRAINT FK_PP_PROJETO FOREIGN KEY(CO_PROJETO) REFERENCES TB_PROJETO(ID_PROJETO),
    PRIMARY KEY (CO_PESQUISADOR, CO_PROJETO)
);

-- Tabela associativa N:M para vincular pesquisadores a laboratórios.
CREATE TABLE TB_PESQUISADOR_LABORATORIO (
    CO_PESQUISADOR INT NOT NULL,
    CO_LABORATORIO INT NOT NULL,
    CONSTRAINT FK_PL_PESQUISADOR FOREIGN KEY(CO_PESQUISADOR) REFERENCES TB_PESQUISADOR(ID_PESQUISADOR),
    CONSTRAINT FK_PL_LABORATORIO FOREIGN KEY(CO_LABORATORIO) REFERENCES TB_LABORATORIO(ID_LABORATORIO),
    PRIMARY KEY (CO_PESQUISADOR, CO_LABORATORIO)
);

-- Tabela associativa N:M para autoria de publicações.
CREATE TABLE TB_PUBLICACAO_AUTORIA (
    CO_PUBLICACAO INT NOT NULL,
    CO_PESQUISADOR INT NOT NULL,
    CONSTRAINT FK_PA_PUBLICACAO FOREIGN KEY(CO_PUBLICACAO) REFERENCES TB_PUBLICACAO(ID_PUBLICACAO),
    CONSTRAINT FK_PA_PESQUISADOR FOREIGN KEY(CO_PESQUISADOR) REFERENCES TB_PESQUISADOR(ID_PESQUISADOR),
    PRIMARY KEY (CO_PUBLICACAO, CO_PESQUISADOR)
);

-- Tabela associativa N:M para financiamento de projetos.
CREATE TABLE TB_FINANCIADOR_PROJETO (
    CO_FINANCIADOR INT NOT NULL,
    CO_PROJETO INT NOT NULL,
    CONSTRAINT FK_FP_FINANCIADOR FOREIGN KEY(CO_FINANCIADOR) REFERENCES TB_FINANCIADOR(ID_FINANCIADOR),
    CONSTRAINT FK_FP_PROJETO FOREIGN KEY(CO_PROJETO) REFERENCES TB_PROJETO(ID_PROJETO),
    PRIMARY KEY (CO_FINANCIADOR, CO_PROJETO)
);

-- Tabela associativa N:M para participação de pesquisadores em eventos.
CREATE TABLE TB_PESQUISADOR_EVENTO (
    CO_PESQUISADOR INT NOT NULL,
    CO_EVENTO INT NOT NULL,
    CONSTRAINT FK_PE_PESQUISADOR FOREIGN KEY(CO_PESQUISADOR) REFERENCES TB_PESQUISADOR(ID_PESQUISADOR),
    CONSTRAINT FK_PE_EVENTO FOREIGN KEY(CO_EVENTO) REFERENCES TB_EVENTO(ID_EVENTO),
    PRIMARY KEY (CO_PESQUISADOR, CO_EVENTO)
);


-- Inserindo Financiadores
INSERT INTO TB_FINANCIADOR (NM_FINANCIADOR, VL_INVESTIMENTO, TP_FINANCIADOR, ST_REGISTRO_ATIVO) VALUES
('CNPq', 5000000.00, 'Governamental', 'S'),
('CAPES', 7500000.50, 'Governamental', 'S'),
('FAPESB', 3500000.75, 'Estadual', 'S'),
('Empresa Tech Inovadora S.A.', 1200000.00, 'Privado', 'S'),
('Fundação Aprender', 200000.00, 'Privado', 'N'),
('FINEP', 9800000.00, 'Governamental', 'S'),
('Ministério da Saúde', 4500000.00, 'Governamental', 'S'),
('FAPESP', 8900000.00, 'Estadual', 'S'),
('FAPERJ', 4200000.25, 'Estadual', 'S'),
('BNDES', 15000000.00, 'Governamental', 'S'),
('Instituto Serrapilheira', 850000.00, 'Privado', 'S'),
('FAPEMIG', 6800000.00, 'Estadual', 'S'),
('Petrobras', 12500000.00, 'Privado', 'S');

-- Inserindo Laboratórios
INSERT INTO TB_LABORATORIO (NM_LABORATORIO, NM_UNIVERSIDADE, DS_AREA, ST_REGISTRO_ATIVO) VALUES
('Lab. de Inteligência Artificial', 'Universidade Federal da Bahia', 'Inteligência Artificial', 'S'),
('Lab. de Biotecnologia Aplicada', 'Universidade Federal da Bahia', 'Biotecnologia', 'S'),
('Núcleo de Estudos em Redes', 'Universidade Estadual de Feira de Santana', 'Redes de Computadores', 'S'),
('Centro de Pesquisa em Materiais', 'Universidade Federal da Bahia', 'Engenharia de Materiais', 'S'),
('Lab. de Genômica e Proteômica', 'USP', 'Genômica', 'S'),
('Lab. de Computação de Alto Desempenho', 'UNICAMP', 'Computação Paralela', 'S'),
('Núcleo de Estudos Socioeconômicos', 'Universidade Federal da Bahia', 'Economia', 'S'),
('Lab. de Farmacologia', 'UFRJ', 'Farmacologia', 'S'),
('Lab. de Robótica Avançada', 'Universidade Federal de Pernambuco', 'Robótica', 'S'),
('Centro de Estudos Ambientais', 'Universidade Federal de Santa Catarina', 'Meio Ambiente', 'S'),
('Lab. de Química Analítica', 'Universidade Federal do Rio Grande do Sul', 'Química', 'S'),
('Lab. de Física Aplicada', 'Universidade Federal de Minas Gerais', 'Física', 'S'),
('Lab. de Engenharia Biomédica', 'PUC-Rio', 'Engenharia Biomédica', 'S'),
('Lab. de Computação Gráfica', 'Universidade Federal do Ceará', 'Computação Gráfica', 'S'),
('Lab. de Estatística e Modelagem', 'Universidade Federal do Paraná', 'Estatística', 'S'),
('Lab. de Nanotecnologia', 'Universidade Federal do Rio de Janeiro', 'Nanotecnologia', 'S'),
('Lab. de Oceanografia', 'Universidade Federal do Espírito Santo', 'Oceanografia', 'S'),
('Lab. de Engenharia de Software', 'Universidade Federal de Pernambuco', 'Engenharia de Software', 'S'),
('Lab. de Bioinformática', 'USP', 'Bioinformática', 'S'),
('Lab. de Energia Renovável', 'Universidade Federal de Santa Catarina', 'Energia Renovável', 'S');

-- Inserindo Projetos
INSERT INTO TB_PROJETO (NM_PROJETO, VL_ORCAMENTO, DT_INICIO, DT_FINAL, ST_PROJETO, ST_REGISTRO_ATIVO) VALUES
('Sistema de Recomendação para E-commerce', 150000.00, '2023-01-15', '2025-01-14', 'A', 'S'),
('Desenvolvimento de Bio-fertilizante', 95000.00, '2022-06-01', '2024-12-31', 'A', 'S'),
('Análise de Segurança em Redes IoT', 75000.00, '2024-03-01', NULL, 'A', 'S'),
('Estudo de Ligas Metálicas Leves', 250000.00, '2021-02-20', '2024-02-19', 'C', 'S'),
('Mapeamento Genético da População Baiana', 350000.00, '2023-08-01', '2026-08-01', 'A', 'S'),
('Otimização de Algoritmos para Processamento Paralelo', 180000.00, '2022-09-10', '2025-09-09', 'A', 'S'),
('Impacto do Microcrédito no Nordeste', 65000.00, '2024-01-20', '2025-01-20', 'P', 'S'),
('Desenvolvimento de novo fármaco para Diabetes', 450000.00, '2020-05-15', '2025-05-14', 'A', 'S'),
('Plataforma de Análise de Sentimentos em Mídias Sociais', 120000.00, '2023-11-01', '2025-11-01', 'A', 'S'),
('Reciclagem de Polímeros para Construção Civil', 85000.00, '2022-04-10', '2024-10-10', 'C', 'N');

-- Inserindo Pesquisadores
INSERT INTO TB_PESQUISADOR (NM_PESQUISADOR, DS_EMAIL, DS_TITULACAO, QT_CARGA_HORARIA, TP_BOLSA, VL_BOLSA, ST_REGISTRO_ATIVO) VALUES
('Dr. Carlos Silva', 'carlos.silva@ufba.br', 'Doutorado', 40, 'Produtividade CNPq', 3500.00, 'S'),
('Dra. Ana Souza', 'ana.souza@ufba.br', 'Doutorado', 40, 'Pós-Doutorado CAPES', 4100.00, 'S'),
('Msc. Bruno Costa', 'bruno.costa@uefs.br', 'Mestrado', 30, 'Mestrado FAPESB', 2200.00, 'S'),
('Joana Pereira', 'joana.pereira@ufba.br', 'Graduação', 20, 'Iniciação Científica', 700.00, 'S'),
('Dr. Ricardo Lima', 'ricardo.lima@ufba.br', 'Doutorado', 40, NULL, NULL, 'S'),
('Dra. Fernanda Borges', 'fernanda.borges@usp.br', 'Doutorado', 40, 'Pós-Doutorado FAPESP', 4500.00, 'S'),
('Dr. Lucas Martins', 'lucas.martins@unicamp.br', 'Doutorado', 40, 'Produtividade CNPq', 3800.00, 'S'),
('Msc. Gabriela Dias', 'gabriela.dias@ufba.br', 'Mestrado', 30, 'Mestrado CAPES', 2200.00, 'S'),
('Dr. Roberto Alves', 'roberto.alves@ufrj.br', 'Doutorado', 40, NULL, NULL, 'S'),
('Mariana Santos', 'mariana.santos@ufba.br', 'Graduação', 20, 'Iniciação Científica', 700.00, 'S'),
('Dr. Heitor Peixoto', 'heitor.peixoto@ufba.br', 'Doutorado', 40, NULL, NULL, 'S'),
('Dra. Beatriz Ferraz', 'beatriz.ferraz@ufba.br', 'Doutorado', 40, 'Produtividade CNPq', 3600.00, 'S'),
('Msc. Vinicius Andrade', 'vinicius.andrade@uefs.br', 'Mestrado', 20, NULL, NULL, 'S'),
('Dra. Carolina Nogueira', 'carolina.nogueira@usp.br', 'Doutorado', 40, 'Pós-Doutorado FAPESP', 4600.00, 'S'),
('Dr. Jorge Ben', 'jorge.ben@unicamp.br', 'Doutorado', 40, NULL, NULL, 'S'),
('Msc. Larissa Almeida', 'larissa.almeida@ufba.br', 'Mestrado', 30, 'Mestrado FAPESB', 2200.00, 'S'),
('Dr. Samuel Veiga', 'samuel.veiga@ufrj.br', 'Doutorado', 40, 'Produtividade CNPq', 4000.00, 'S'),
('Letícia Barros', 'leticia.barros@ufba.br', 'Graduação', 20, 'Iniciação Científica', 700.00, 'S'),
('Dr. Fábio Azevedo', 'fabio.azevedo@ufba.br', 'Doutorado', 40, NULL, NULL, 'N'),
('Dra. Patrícia Melo', 'patricia.melo@ufba.br', 'Doutorado', 40, 'Pós-Doutorado CAPES', 4100.00, 'S');

-- Inserindo Eventos
INSERT INTO TB_EVENTO (NM_EVENTO, DS_LOCAL, DT_EVENTO, TP_EVENTO, QT_CARGA_HORARIA) VALUES
('Congresso Brasileiro de IA', 'Online', '2024-10-20', 'Conferência', 40),
('Workshop de Biotecnologia', 'Salvador, BA', '2025-05-12', 'Workshop', 16),
('Simpósio de Segurança em Redes', 'São Paulo, SP', '2024-11-08', 'Simpósio', 24),
('SBBD - Simpósio Brasileiro de Bancos de Dados', 'Rio de Janeiro, RJ', '2025-10-05', 'Simpósio', 32),
('International Conference on Materials Science', 'Online', '2025-07-19', 'Conferência', 40),
('Semana de Genômica da USP', 'São Paulo, SP', '2024-09-15', 'Semana Acadêmica', 20),
('Encontro Nacional de Computação Gráfica', 'Fortaleza, CE', '2024-08-22', 'Encontro', 24),
('Jornada de Farmacologia Aplicada', 'Rio de Janeiro, RJ', '2025-03-10', 'Jornada', 20),
('Fórum de Energia Renovável', 'Florianópolis, SC', '2024-12-05', 'Fórum', 18),
('Seminário de Estatística e Modelagem', 'Curitiba, PR', '2025-04-18', 'Seminário', 16),
('Congresso Internacional de Robótica', 'Recife, PE', '2025-06-25', 'Congresso', 36),
('Workshop de Oceanografia', 'Vitória, ES', '2024-11-30', 'Workshop', 14);

-- Inserindo Publicações
INSERT INTO TB_PUBLICACAO (DS_TITULO, NM_EDITORA, TP_CATEGORIA, DT_PUBLICACAO) VALUES
('Avanços em Modelos de Linguagem Natural', 'IEEE', 'Artigo de Periódico', '2023-07-22'),
('Técnicas de Fermentação para Bio-insumos', 'Editora Acadêmica', 'Capítulo de Livro', '2024-01-30'),
('Vulnerabilidades em Dispositivos IoT: Um Estudo de Caso', 'ACM', 'Artigo de Conferência', '2024-08-15'),
('Indexação de Dados Multidimensionais: Uma Revisão', 'Elsevier', 'Artigo de Periódico', '2023-05-10'),
('O Genoma do Aedes aegypti: Novas Perspectivas', 'Nature', 'Artigo de Periódico', '2024-03-12'),
('Paralelismo de Dados com CUDA e OpenCL', 'Editora Campus', 'Livro', '2022-11-20'),
('Análise de Fármacos por Espectrometria de Massas', 'Springer', 'Artigo de Periódico', '2024-06-01'),
('Impacto Social das Redes 5G', 'SBC', 'Artigo de Conferência', '2023-11-05'),
('Machine Learning Aplicado à Análise de Crédito', 'FGV', 'Artigo de Periódico', '2024-02-28'),
('Estudo Comparativo de Ligas de Titânio para Próteses', 'Journal of Materials Science', 'Artigo de Periódico', '2022-08-19');


-- Inserindo Equipamentos
INSERT INTO TB_EQUIPAMENTO (NM_EQUIPAMENTO, ST_DISPONIBILIDADE, CO_LABORATORIO) VALUES
('Servidor GPU NVIDIA A100', 'Em Uso', 1),
('Sequenciador de DNA Illumina', 'Disponível', 2),
('Analisador de Pacotes de Rede Wireshark', 'Manutenção', 3),
('Microscópio Eletrônico de Varredura', 'Disponível', 4),
('Cluster de Processamento HP', 'Disponível', 1),
('Cromatógrafo a Gás', 'Em Uso', 2),
('Servidor de Armazenamento Dell', 'Disponível', 3),
('Reator Químico', 'Manutenção', 4),
('Sequenciador de Nova Geração', 'Em Uso', 5),
('Supercomputador Santos Dumont', 'Disponível', 6),
('Software Stata', 'Em Uso', 7),
('Espectrômetro de Massas', 'Disponível', 8),
('Servidor GPU NVIDIA H100', 'Disponível', 1),
('PCR em Tempo Real', 'Em Uso', 2),
('Firewall de Próxima Geração', 'Disponível', 3),
('Difratômetro de Raios-X', 'Em Uso', 4),
('Termociclador', 'Disponível', 5),
('Nó de Processamento IBM Power 9', 'Em Uso', 6),
('Software R', 'Disponível', 7),
('Agitador Magnético', 'Em Uso', 8);

-- Inserindo Avaliações
INSERT INTO TB_AVALIACAO (QT_NOTA, DS_FEEDBACK, DT_AVALIACAO, CO_PESQUISADOR, CO_PROJETO) VALUES
(5, 'Excelente progresso no desenvolvimento do modelo.', '2024-06-15', 1, 1),
(4, 'Resultados promissores, mas precisa de mais testes em campo.', '2024-05-20', 2, 2),
(5, 'Contribuição significativa na análise de vulnerabilidades.', '2025-01-10', 3, 3),
(4, 'Bom desempenho nas tarefas, demonstrou proatividade.', '2024-07-01', 4, 1),
(5, 'Liderança exemplar na condução do projeto.', '2024-06-01', 6, 5),
(3, 'Apresentou dificuldades com a metodologia, precisa de suporte.', '2024-07-10', 7, 6),
(4, 'Análise de dados bem fundamentada.', '2025-02-15', 8, 7),
(5, 'Performance excepcional nos experimentos.', '2024-04-22', 9, 8),
(4, 'Relatório bem escrito e detalhado.', '2024-05-30', 1, 9),
(2, 'Baixo engajamento nas últimas semanas.', '2024-07-05', 5, 4);

-- Inserindo Relatórios
INSERT INTO TB_RELATORIO (DS_RELATORIO, ST_ANDAMENTO, DT_SUBMISSAO, CO_PESQUISADOR, CO_PROJETO) VALUES
('Relatório Parcial do Módulo de IA.', 'Em andamento', '2024-07-01', 1, 1),
('Relatório Final de Análise de Ligas.', 'Finalizado', '2024-02-18', 5, 4),
('Relatório de Progresso - Mapeamento Genético', 'Em andamento', '2024-08-01', 6, 5),
('Relatório de Atividades - Otimização de Algoritmos', 'Em andamento', '2024-06-30', 7, 6),
('Relatório de Coleta de Dados - Microcrédito', 'Inicial', '2024-07-15', 8, 7),
('Relatório Anual - Fármaco para Diabetes', 'Em andamento', '2024-05-15', 9, 8),
('Relatório Parcial - Redes 5G', 'Em andamento', '2024-07-10', 3, 3),
('Relatório Final - Genômica do Aedes', 'Finalizado', '2024-03-20', 14, 5),
('Relatório de Progresso - Computação Paralela', 'Em andamento', '2024-06-25', 15, 6),
('Relatório de Atividades - Estatística Aplicada', 'Inicial', '2024-07-05', 18, 9),
('Relatório Parcial - Engenharia Biomédica', 'Em andamento', '2024-07-12', 13, 5),
('Relatório Final - Oceanografia', 'Finalizado', '2024-08-02', 17, 8);

-- 4. Inserindo Relações N:M

-- TB_PESQUISADOR_PROJETO
INSERT INTO TB_PESQUISADOR_PROJETO (CO_PESQUISADOR, CO_PROJETO) VALUES
(1, 1), (1, 3), (1, 9), (2, 2), (2, 8), (3, 3), (4, 1), (4, 2), (5, 4), (5, 10), (6, 5), (7, 6), (8, 7), (8, 9), (9, 8), (10, 5), (11, 4), (12, 1), (12, 2), (13, 3), (14, 5), (15, 6), (16, 7), (17, 8), (18, 9), (20, 2), (20, 8);

-- TB_PESQUISADOR_LABORATORIO
INSERT INTO TB_PESQUISADOR_LABORATORIO (CO_PESQUISADOR, CO_LABORATORIO) VALUES
(1, 1), (2, 2), (3, 3), (4, 1), (5, 4), (6, 5), (7, 6), (8, 7), (9, 8), (10, 2), (11, 4), (12, 1), (13, 3), (14, 5), (15, 6), (16, 7), (17, 8), (18, 1), (19, 4), (20, 2);

-- TB_PUBLICACAO_AUTORIA
INSERT INTO TB_PUBLICACAO_AUTORIA (CO_PUBLICACAO, CO_PESQUISADOR) VALUES
(1, 1), (1, 12), (2, 2), (2, 10), (3, 3), (3, 1), (4, 1), (4, 15), (5, 6), (5, 14), (6, 7), (6, 15), (7, 9), (7, 17), (8, 3), (8, 13), (9, 8), (9, 16), (10, 5), (10, 11);

-- TB_FINANCIADOR_PROJETO
INSERT INTO TB_FINANCIADOR_PROJETO (CO_FINANCIADOR, CO_PROJETO) VALUES
(1, 1), (1, 6), (2, 2), (2, 5), (3, 3), (3, 7), (4, 9), (4, 1), (6, 8), (7, 2), (8, 5);

-- TB_PESQUISADOR_EVENTO
INSERT INTO TB_PESQUISADOR_EVENTO (CO_PESQUISADOR, CO_EVENTO) VALUES
(1, 1), (1, 3), (1, 4), (2, 2), (3, 3), (3, 4), (5, 5), (6, 6), (7, 4), (9, 2), (12, 1), (14, 6), (15, 4), (17, 2);


-- Consulta 1
SELECT
    L.NM_LABORATORIO,
    L.DS_AREA,
    COUNT(E.ID_EQUIPAMENTO) AS "Total de Equipamentos",
    COUNT(CASE WHEN E.ST_DISPONIBILIDADE = 'Disponível' THEN 1 END) AS "Equipamentos Disponíveis"
FROM
    TB_LABORATORIO L
JOIN
    TB_EQUIPAMENTO E ON L.ID_LABORATORIO = E.CO_LABORATORIO
JOIN
    TB_PESQUISADOR_LABORATORIO PL ON L.ID_LABORATORIO = PL.CO_LABORATORIO
WHERE L.ST_REGISTRO_ATIVO = 'S'
GROUP BY
    L.NM_LABORATORIO, L.DS_AREA
ORDER BY
    "Total de Equipamentos" DESC;


-- Consulta 2

SELECT
    P.NM_PESQUISADOR,
    PUB.TP_CATEGORIA,
    COUNT(PUB.ID_PUBLICACAO) AS "Quantidade de Publicações"
FROM
    TB_PESQUISADOR P
JOIN
    TB_PUBLICACAO_AUTORIA PA ON P.ID_PESQUISADOR = PA.CO_PESQUISADOR
JOIN
    TB_PUBLICACAO PUB ON PA.CO_PUBLICACAO = PUB.ID_PUBLICACAO
GROUP BY
    P.NM_PESQUISADOR,
    PUB.TP_CATEGORIA
ORDER BY
    P.NM_PESQUISADOR,
    "Quantidade de Publicações" DESC;


-- Consulta 3

SELECT
    P.NM_PESQUISADOR,
    E.TP_EVENTO,
    COUNT(E.ID_EVENTO) AS "Total de Eventos Participados"
FROM
    TB_PESQUISADOR P
JOIN
    TB_PESQUISADOR_EVENTO PE ON P.ID_PESQUISADOR = PE.CO_PESQUISADOR
JOIN
    TB_EVENTO E ON PE.CO_EVENTO = E.ID_EVENTO
GROUP BY
    P.NM_PESQUISADOR,
    E.TP_EVENTO
ORDER BY
    P.NM_PESQUISADOR,
    "Total de Eventos Participados" DESC;


-- Consulta 4

SELECT
    PR.NM_PROJETO,
    P.NM_PESQUISADOR,
    AVG(A.QT_NOTA) AS "Nota Média",
    COUNT(A.ID_AVALIACAO) AS "Número de Avaliações"
FROM
    TB_AVALIACAO A
JOIN
    TB_PESQUISADOR P ON A.CO_PESQUISADOR = P.ID_PESQUISADOR
JOIN
    TB_PROJETO PR ON A.CO_PROJETO = PR.ID_PROJETO
GROUP BY
    PR.NM_PROJETO,
    P.NM_PESQUISADOR
ORDER BY
    PR.NM_PROJETO,
    "Nota Média" DESC;


-- Consulta 5

SELECT
    F.NM_FINANCIADOR,
    COUNT(P.ID_PROJETO) AS "Quantidade de Projetos Financiados",
    SUM(P.VL_ORCAMENTO) AS "Orçamento Total Gerenciado"
FROM
    TB_FINANCIADOR F
JOIN
    TB_FINANCIADOR_PROJETO FP ON F.ID_FINANCIADOR = FP.CO_FINANCIADOR
JOIN
    TB_PROJETO P ON FP.CO_PROJETO = P.ID_PROJETO
WHERE F.ST_REGISTRO_ATIVO = 'S'
GROUP BY
    F.NM_FINANCIADOR
ORDER BY
    "Orçamento Total Gerenciado" DESC;


-- Consulta 6

SELECT
    P.NM_PESQUISADOR,
    COUNT(PUB.ID_PUBLICACAO) AS "Publicações Recentes",
    RANK() OVER (ORDER BY COUNT(PUB.ID_PUBLICACAO) DESC) AS "Ranking"
FROM
    TB_PESQUISADOR P
JOIN
    TB_PUBLICACAO_AUTORIA PA ON P.ID_PESQUISADOR = PA.CO_PESQUISADOR
JOIN
    TB_PUBLICACAO PUB ON PA.CO_PUBLICACAO = PUB.ID_PUBLICACAO
WHERE
    PUB.DT_PUBLICACAO >= '2023-01-01'
GROUP BY
    P.NM_PESQUISADOR
ORDER BY
    "Ranking";


-- Consulta 7

SELECT
    P.NM_PESQUISADOR,
    PR.NM_PROJETO,
    A.QT_NOTA AS "Nota Individual",
    A.DT_AVALIACAO,
    AVG(A.QT_NOTA) OVER (PARTITION BY A.CO_PROJETO) AS "Média do Projeto"
FROM
    TB_AVALIACAO A
JOIN
    TB_PESQUISADOR P ON A.CO_PESQUISADOR = P.ID_PESQUISADOR
JOIN
    TB_PROJETO PR ON A.CO_PROJETO = PR.ID_PROJETO
ORDER BY
    P.NM_PESQUISADOR, A.DT_AVALIACAO;


-- Consulta 8

SELECT
    PR.NM_PROJETO,
    P.DS_TITULACAO,
    COUNT(P.ID_PESQUISADOR) AS "Quantidade de Pesquisadores"
FROM
    TB_PESQUISADOR P
JOIN
    TB_PESQUISADOR_PROJETO PP ON P.ID_PESQUISADOR = PP.CO_PESQUISADOR
JOIN
    TB_PROJETO PR ON PP.CO_PROJETO = PR.ID_PROJETO
WHERE PR.ST_PROJETO = 'A'
GROUP BY
    PR.NM_PROJETO,
    P.DS_TITULACAO
ORDER BY
    PR.NM_PROJETO,
    P.DS_TITULACAO;


-- Consulta 9

SELECT
    L.NM_LABORATORIO,
    COUNT(DISTINCT P.ID_PESQUISADOR) AS "Número de Pesquisadores",
    COUNT(CASE WHEN E.ST_DISPONIBILIDADE = 'Manutenção' THEN 1 END) AS "Equipamentos em Manutenção"
FROM
    TB_LABORATORIO L
LEFT JOIN
    TB_PESQUISADOR_LABORATORIO PL ON L.ID_LABORATORIO = PL.CO_LABORATORIO
LEFT JOIN
    TB_PESQUISADOR P ON PL.CO_PESQUISADOR = P.ID_PESQUISADOR
LEFT JOIN
    TB_EQUIPAMENTO E ON L.ID_LABORATORIO = E.CO_LABORATORIO
GROUP BY
    L.NM_LABORATORIO
ORDER BY
    "Número de Pesquisadores" DESC;


-- Consulta 10

SELECT
    P.NM_PESQUISADOR,
    SUM(E.QT_CARGA_HORARIA) AS "Total Horas em Eventos"
FROM
    TB_PESQUISADOR P
JOIN
    TB_PESQUISADOR_EVENTO PE ON P.ID_PESQUISADOR = PE.CO_PESQUISADOR
JOIN
    TB_EVENTO E ON PE.CO_EVENTO = E.ID_EVENTO
GROUP BY
    P.NM_PESQUISADOR
HAVING
    SUM(E.QT_CARGA_HORARIA) > 0
ORDER BY
    "Total Horas em Eventos" DESC;


--  CONSULTAS AVANÇADAS

-- Consulta 11

WITH RankingPesquisadores AS (
    SELECT
        L.DS_AREA,
        P.NM_PESQUISADOR,
        COUNT(PA.CO_PUBLICACAO) AS "TotalPublicacoes",
        ROW_NUMBER() OVER(PARTITION BY L.DS_AREA ORDER BY COUNT(PA.CO_PUBLICACAO) DESC) as "Rank"
    FROM
        TB_PESQUISADOR P
    JOIN
        TB_PESQUISADOR_LABORATORIO PL ON P.ID_PESQUISADOR = PL.CO_PESQUISADOR
    JOIN
        TB_LABORATORIO L ON PL.CO_LABORATORIO = L.ID_LABORATORIO
    JOIN
        TB_PUBLICACAO_AUTORIA PA ON P.ID_PESQUISADOR = PA.CO_PESQUISADOR
    GROUP BY
        L.DS_AREA, P.NM_PESQUISADOR
)
SELECT
    DS_AREA,
    NM_PESQUISADOR,
    "TotalPublicacoes"
FROM
    RankingPesquisadores
WHERE
    "Rank" = 1;


-- Consulta 12

WITH CustoPorProjeto AS (
    SELECT
        PR.ID_PROJETO,
        PR.NM_PROJETO,
        PR.VL_ORCAMENTO,
        COUNT(PA.CO_PUBLICACAO) AS "QtdPublicacoes"
    FROM
        TB_PROJETO PR
    LEFT JOIN
        TB_PESQUISADOR_PROJETO PP ON PR.ID_PROJETO = PP.CO_PROJETO
    LEFT JOIN
        TB_PUBLICACAO_AUTORIA PA ON PP.CO_PESQUISADOR = PA.CO_PESQUISADOR
    GROUP BY
        PR.ID_PROJETO, PR.NM_PROJETO, PR.VL_ORCAMENTO
)
SELECT
    F.NM_FINANCIADOR,
    AVG(CASE WHEN CPP."QtdPublicacoes" > 0 THEN CPP.VL_ORCAMENTO / CPP."QtdPublicacoes" ELSE NULL END) AS "CustoMedioPorPublicacao"
FROM
    TB_FINANCIADOR F
JOIN
    TB_FINANCIADOR_PROJETO FP ON F.ID_FINANCIADOR = FP.CO_FINANCIADOR
JOIN
    CustoPorProjeto CPP ON FP.CO_PROJETO = CPP.ID_PROJETO
GROUP BY
    F.NM_FINANCIADOR
HAVING
    AVG(CASE WHEN CPP."QtdPublicacoes" > 0 THEN CPP.VL_ORCAMENTO / CPP."QtdPublicacoes" ELSE NULL END) IS NOT NULL
ORDER BY
    "CustoMedioPorPublicacao" ASC;


-- Consulta 13

SELECT
    P.NM_PESQUISADOR,
    (SELECT COUNT(*) FROM TB_PESQUISADOR_EVENTO PE WHERE PE.CO_PESQUISADOR = P.ID_PESQUISADOR) AS "EventosParticipados",
    AVG(A.QT_NOTA) AS "NotaMediaAvaliacao"
FROM
    TB_PESQUISADOR P
JOIN
    TB_AVALIACAO A ON P.ID_PESQUISADOR = A.CO_PESQUISADOR
GROUP BY
    P.ID_PESQUISADOR, P.NM_PESQUISADOR
HAVING
    (SELECT COUNT(*) FROM TB_PESQUISADOR_EVENTO PE WHERE PE.CO_PESQUISADOR = P.ID_PESQUISADOR) >
    (SELECT AVG(TotalEventos) FROM (SELECT COUNT(CO_EVENTO) AS TotalEventos FROM TB_PESQUISADOR_EVENTO GROUP BY CO_PESQUISADOR) AS SubQuery)
ORDER BY
    "NotaMediaAvaliacao" DESC;


-- Consulta 14

WITH MetricasLaboratorio AS (
    SELECT
        L.ID_LABORATORIO,
        L.NM_LABORATORIO,
        COUNT(DISTINCT PA.CO_PUBLICACAO) AS "TotalPublicacoes"
    FROM
        TB_LABORATORIO L
    JOIN
        TB_PESQUISADOR_LABORATORIO PL ON L.ID_LABORATORIO = PL.CO_LABORATORIO
    JOIN
        TB_PUBLICACAO_AUTORIA PA ON PL.CO_PESQUISADOR = PA.CO_PESQUISADOR
    GROUP BY
        L.ID_LABORATORIO, L.NM_LABORATORIO
)
SELECT
    ML.NM_LABORATORIO,
    ML."TotalPublicacoes",
    COUNT(E.ID_EQUIPAMENTO) AS "QtdEquipamentosDePonta"
FROM
    MetricasLaboratorio ML
JOIN
    TB_EQUIPAMENTO E ON ML.ID_LABORATORIO = E.CO_LABORATORIO
WHERE
    E.NM_EQUIPAMENTO LIKE '%GPU%' OR E.NM_EQUIPAMENTO LIKE '%Sequenciador%' OR E.NM_EQUIPAMENTO LIKE '%Supercomputador%'
GROUP BY
    ML.NM_LABORATORIO, ML."TotalPublicacoes"
ORDER BY
    "QtdEquipamentosDePonta" DESC, "TotalPublicacoes" DESC;


-- Consulta 15

SELECT
    P.NM_PESQUISADOR,
    COUNT(PP.CO_PROJETO) AS "ProjetosAtivos",
    AVG(A.QT_NOTA) AS "NotaMediaPessoal"
FROM
    TB_PESQUISADOR P
JOIN
    TB_PESQUISADOR_PROJETO PP ON P.ID_PESQUISADOR = PP.CO_PESQUISADOR
JOIN
    TB_AVALIACAO A ON P.ID_PESQUISADOR = A.CO_PESQUISADOR
WHERE PP.CO_PROJETO IN (SELECT ID_PROJETO FROM TB_PROJETO WHERE ST_PROJETO = 'A')
GROUP BY
    P.NM_PESQUISADOR
HAVING
    COUNT(PP.CO_PROJETO) >= 3
ORDER BY
    "NotaMediaPessoal" DESC;


-- Consulta 16

WITH PublicacoesAnuais AS (
    SELECT
        P.NM_PESQUISADOR,
        EXTRACT(YEAR FROM PUB.DT_PUBLICACAO) AS "Ano",
        COUNT(PUB.ID_PUBLICACAO) AS "PublicacoesNoAno"
    FROM
        TB_PESQUISADOR P
    JOIN
        TB_PUBLICACAO_AUTORIA PA ON P.ID_PESQUISADOR = PA.CO_PESQUISADOR
    JOIN
        TB_PUBLICACAO PUB ON PA.CO_PUBLICACAO = PUB.ID_PUBLICACAO
    GROUP BY
        P.NM_PESQUISADOR, EXTRACT(YEAR FROM PUB.DT_PUBLICACAO)
)
SELECT
    NM_PESQUISADOR,
    "Ano",
    "PublicacoesNoAno",
    SUM("PublicacoesNoAno") OVER (PARTITION BY NM_PESQUISADOR ORDER BY "Ano") AS "TotalAcumulado"
FROM
    PublicacoesAnuais
ORDER BY
    NM_PESQUISADOR, "Ano";


-- Consulta 17

SELECT
    PR.NM_PROJETO,
    PR.VL_ORCAMENTO,
    COUNT(PA.CO_PUBLICACAO) AS "QtdPublicacoes"
FROM
    TB_PROJETO PR
LEFT JOIN
    TB_PESQUISADOR_PROJETO PP ON PR.ID_PROJETO = PP.CO_PROJETO
LEFT JOIN
    TB_PUBLICACAO_AUTORIA PA ON PP.CO_PESQUISADOR = PA.CO_PESQUISADOR
GROUP BY
    PR.ID_PROJETO, PR.NM_PROJETO, PR.VL_ORCAMENTO
HAVING
    PR.VL_ORCAMENTO > (SELECT AVG(VL_ORCAMENTO) FROM TB_PROJETO)
    AND COUNT(PA.CO_PUBLICACAO) < (SELECT AVG(PubsPorProjeto) FROM (SELECT COUNT(CO_PUBLICACAO) as PubsPorProjeto FROM TB_PUBLICACAO_AUTORIA GROUP BY CO_PESQUISADOR) as Sub)
ORDER BY
    PR.VL_ORCAMENTO DESC;


-- Consulta 18

WITH AutoresLab AS (
    SELECT
        PA.CO_PUBLICACAO,
        PL.CO_LABORATORIO
    FROM
        TB_PUBLICACAO_AUTORIA PA
    JOIN
        TB_PESQUISADOR_LABORATORIO PL ON PA.CO_PESQUISADOR = PL.CO_PESQUISADOR
    GROUP BY
        PA.CO_PUBLICACAO, PL.CO_LABORATORIO
)
SELECT
    P.DS_TITULO,
    COUNT(AL.CO_LABORATORIO) AS "QtdLabsDiferentes"
FROM
    AutoresLab AL
JOIN
    TB_PUBLICACAO P ON AL.CO_PUBLICACAO = P.ID_PUBLICACAO
GROUP BY
    P.DS_TITULO
HAVING
    COUNT(AL.CO_LABORATORIO) >= 2
ORDER BY
    "QtdLabsDiferentes" DESC;


-- Consulta 19

WITH PublicacoesDeImpacto AS (
    SELECT
        FP.CO_FINANCIADOR,
        COUNT(PUB.ID_PUBLICACAO) AS "TotalPublicacoesImpacto"
    FROM
        TB_PUBLICACAO PUB
    JOIN
        TB_PUBLICACAO_AUTORIA PA ON PUB.ID_PUBLICACAO = PA.CO_PUBLICACAO
    JOIN
        TB_PESQUISADOR_PROJETO PP ON PA.CO_PESQUISADOR = PP.CO_PESQUISADOR
    JOIN
        TB_FINANCIADOR_PROJETO FP ON PP.CO_PROJETO = FP.CO_PROJETO
    WHERE
        PUB.NM_EDITORA IN ('IEEE', 'Nature', 'ACM', 'Springer', 'Elsevier')
    GROUP BY
        FP.CO_FINANCIADOR
)
SELECT
    F.NM_FINANCIADOR,
    COALESCE(PI.TotalPublicacoesImpacto, 0) AS "QtdPublicacoesDeImpacto",
    RANK() OVER (ORDER BY COALESCE(PI.TotalPublicacoesImpacto, 0) DESC) AS "RankingDeImpacto"
FROM
    TB_FINANCIADOR F
LEFT JOIN
    PublicacoesDeImpacto PI ON F.ID_FINANCIADOR = PI.CO_FINANCIADOR
WHERE F.ST_REGISTRO_ATIVO = 'S';


-- Consulta 20

SELECT
    P.DS_TITULACAO,
    CASE WHEN P.TP_BOLSA IS NOT NULL THEN 'Bolsista' ELSE 'Não Bolsista' END AS "StatusBolsa",
    COUNT(DISTINCT P.ID_PESQUISADOR) AS "QtdPesquisadores",
    AVG(A.QT_NOTA) AS "NotaMedia"
FROM
    TB_PESQUISADOR P
JOIN
    TB_AVALIACAO A ON P.ID_PESQUISADOR = A.CO_PESQUISADOR
GROUP BY
    P.DS_TITULACAO,
    CASE WHEN P.TP_BOLSA IS NOT NULL THEN 'Bolsista' ELSE 'Não Bolsista' END
ORDER BY
    P.DS_TITULACAO, "StatusBolsa";


--  PLANO DE INDEXAÇÃO

CREATE INDEX IDX_EQUIPAMENTO_CO_LABORATORIO ON TB_EQUIPAMENTO(CO_LABORATORIO);
CREATE INDEX IDX_AVALIACAO_CO_PESQUISADOR ON TB_AVALIACAO(CO_PESQUISADOR);
CREATE INDEX IDX_AVALIACAO_CO_PROJETO ON TB_AVALIACAO(CO_PROJETO);
CREATE INDEX IDX_RELATORIO_CO_PESQUISADOR ON TB_RELATORIO(CO_PESQUISADOR);
CREATE INDEX IDX_RELATORIO_CO_PROJETO ON TB_RELATORIO(CO_PROJETO);

-- Índices para buscas reversas em tabelas associativas (N:M)


CREATE INDEX IDX_PESQ_PROJ_CO_PROJETO ON TB_PESQUISADOR_PROJETO(CO_PROJETO);
CREATE INDEX IDX_PESQ_LAB_CO_LABORATORIO ON TB_PESQUISADOR_LABORATORIO(CO_LABORATORIO);
CREATE INDEX IDX_PUB_AUT_CO_PESQUISADOR ON TB_PUBLICACAO_AUTORIA(CO_PESQUISADOR);
CREATE INDEX IDX_FIN_PROJ_CO_PROJETO ON TB_FINANCIADOR_PROJETO(CO_PROJETO);
CREATE INDEX IDX_PESQ_EVT_CO_EVENTO ON TB_PESQUISADOR_EVENTO(CO_EVENTO);


-- Índices em colunas de FILTRAGEM (WHERE) e AGRUPAMENTO (GROUP BY)

-- Para consultas de projetos por status (Consultas 8, 15)
CREATE INDEX IDX_PROJETO_ST_PROJETO ON TB_PROJETO(ST_PROJETO);

-- Para consultas de publicações por data (Consultas 6, 16)
CREATE INDEX IDX_PUBLICACAO_DT_PUBLICACAO ON TB_PUBLICACAO(DT_PUBLICACAO);

-- Para consultas de publicações por editora (Consulta 19)
CREATE INDEX IDX_PUBLICACAO_NM_EDITORA ON TB_PUBLICACAO(NM_EDITORA);

-- Para consultas de equipamentos por disponibilidade (Consulta 9)
CREATE INDEX IDX_EQUIPAMENTO_ST_DISPONIBILIDADE ON TB_EQUIPAMENTO(ST_DISPONIBILIDADE);

-- Para consultas que agrupam por titulação do pesquisador (Consultas 8, 20)
CREATE INDEX IDX_PESQUISADOR_DS_TITULACAO ON TB_PESQUISADOR(DS_TITULACAO);

-- Para consultas que agrupam pela área do laboratório (Consultas 1, 11)
CREATE INDEX IDX_LABORATORIO_DS_AREA ON TB_LABORATORIO(DS_AREA);
